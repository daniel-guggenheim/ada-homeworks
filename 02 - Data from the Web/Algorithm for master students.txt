Algorithm for computing master students stay:

1. Get for each unique student the earliest and latest he appears in MA1, MA2, MA3 and Master project. And save also in which semester it was (MA1, MA2, ...)
2. If the earliest he appears is in the master project, discard it. (*)
3. If the earliest he appears is in MA3, reduce the time by 2 semesters.
4. If the total duration is of 2 semesters AND he has a specilization/Minor, add 1 semester.
5. If only 1 semester is registered (MA1 or MA2 == earliest and latest date), add 1 semester if he has no specilization/Minor or 2 semesters if he has a specilization/Minor.
6. If the latest he appears is in MA1, MA2 or MA3. Add one semester for the Master project.


Note:
- If the earliest he appears is in MA2, it's okay, this can happen when the student starts in January.
(*) If the earliest he appears is in the master project, it could happen that it is an exchange student, so we should discard it I think. We will count how many we discarded that way so we can know the impact of this change.

So for me the dataframe we will compute in 1. will be:

Student Sciper //Specilization/Minor // Specilization_name   //  Earliest Date //  Earliest semester type // Latest Date // Latest semester type // Duration
Example: 123456 // True // Data Analytics // 2013-2014 // MA1 // 2013-2014 // MA3 // 1 year

In points 2-6. we will add the columns:
final earliest date // final latest date // final duration
Example: 2012-2013 // 2014-2015 // 2 years